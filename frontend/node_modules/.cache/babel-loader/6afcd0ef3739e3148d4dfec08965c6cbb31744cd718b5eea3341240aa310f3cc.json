{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\swana\\\\Swapnil\\\\Text-To-PPT\\\\TextToPPT\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [textInput, setTextInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [downloadUrl, setDownloadUrl] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n  const [numSlides, setNumSlides] = useState(5);\n  const [operationMessage, setOperationMessage] = useState(\"\");\n\n  // Effect to stop loading when operation completes (success or error)\n  useEffect(() => {\n    if (downloadUrl || error) {\n      setLoading(false);\n      if (downloadUrl && !error) {\n        setProgress(100); // Ensure progress is 100 on success\n        setOperationMessage(\"Presentation ready for download!\");\n      } else if (error) {\n        setProgress(0); // Reset progress on error\n        // Operation message will be the error itself\n      }\n    }\n  }, [downloadUrl, error]);\n\n  // Simulate progress for better UX\n  const simulateProgress = useCallback(() => {\n    setProgress(0);\n    setOperationMessage(\"Initializing...\");\n    let currentProgress = 0;\n    const intervalId = setInterval(() => {\n      // Stop simulating if no longer loading (e.g., error occurred early or user cancelled)\n      if (!loading && !downloadUrl) {\n        // Check loading state from parent scope\n        clearInterval(intervalId);\n        if (!error) setProgress(0); // Reset if not an error state\n        if (!error) setOperationMessage(\"\");\n        return;\n      }\n      currentProgress += Math.random() * 10 + 7; // Slightly faster and more consistent steps\n\n      if (downloadUrl) {\n        // If downloadUrl is set, we are done with generation\n        setProgress(100);\n        setOperationMessage(\"Finalizing and preparing download...\");\n        clearInterval(intervalId);\n        return;\n      }\n      if (currentProgress >= 95) {\n        setProgress(95);\n        setOperationMessage(\"Almost ready, wrapping up...\");\n        // Don't clear interval here, wait for downloadUrl or error to stop it\n      } else {\n        setProgress(currentProgress);\n        if (currentProgress < 30) setOperationMessage(\"Contacting AI service...\");else if (currentProgress < 70) setOperationMessage(\"AI is crafting your content...\");else setOperationMessage(\"Assembling presentation slides...\");\n      }\n    }, 450); // Interval duration\n    return intervalId;\n  }, [loading, downloadUrl, error]); // Dependencies for useCallback\n\n  const handleGenerate = async () => {\n    console.log(\"handleGenerate called\");\n    setLoading(true); // Set loading true immediately\n    setError(\"\");\n    setDownloadUrl(\"\");\n    setOperationMessage(\"Starting generation...\"); // Initial message\n\n    const progressInterval = simulateProgress();\n    try {\n      const backendUrl = process.env.REACT_APP_BACKEND_URL || \"http://localhost:8000\";\n      const requestBody = {\n        text_input: textInput,\n        num_slides: parseInt(numSlides) || 5\n      };\n      console.log(\"Sending request to backend:\", `${backendUrl}/generate-ppt/`, \"with body:\", JSON.stringify(requestBody));\n      const response = await fetch(`${backendUrl}/generate-ppt/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestBody)\n      });\n      console.log(\"Backend response status:\", response.status, response.statusText);\n      const responseData = await response.json(); // Attempt to parse JSON for both success and error\n      console.log(\"Backend response data:\", responseData);\n      if (!response.ok) {\n        // Try to get a more specific error message from FastAPI's detail structure\n        let errorMessage = `Request failed: ${response.statusText} (${response.status})`;\n        if (responseData && responseData.detail) {\n          if (Array.isArray(responseData.detail) && responseData.detail[0] && responseData.detail[0].msg) {\n            errorMessage = responseData.detail[0].msg;\n          } else if (typeof responseData.detail === 'string') {\n            errorMessage = responseData.detail;\n          }\n        } else if (responseData && responseData.message) {\n          errorMessage = responseData.message;\n        }\n        console.error(\"API Error from backend:\", errorMessage);\n        throw new Error(errorMessage);\n      }\n      if (responseData.download_url) {\n        setDownloadUrl(responseData.download_url); // This will trigger useEffect\n        // Progress and operation message will be updated by useEffect and simulateProgress final step\n        console.log(\"Download URL set from backend:\", responseData.download_url);\n      } else {\n        console.error(\"Backend response OK, but no download_url found in data:\", responseData);\n        throw new Error(\"Server did not provide a download link despite success status.\");\n      }\n    } catch (err) {\n      console.error(\"Error in handleGenerate (fetch or processing):\", err);\n      setError(err.message || \"An unknown error occurred during generation.\");\n      // setLoading(false) and progress reset will be handled by useEffect due to setError\n    } finally {\n      // Interval must be cleared if it's still running\n      // (e.g., if an error occurred before downloadUrl was set)\n      clearInterval(progressInterval);\n      // setLoading(false) is handled by the useEffect hook based on downloadUrl or error states\n    }\n  };\n  const triggerDownload = () => {\n    if (downloadUrl) {\n      console.log(\"Attempting to trigger download for URL:\", downloadUrl);\n      setOperationMessage(\"Download starting...\");\n      const anchor = document.createElement('a');\n      anchor.href = downloadUrl;\n      const filename = downloadUrl.substring(downloadUrl.lastIndexOf('/') + 1) || `${textInput.substring(0, 20) || \"presentation\"}.pptx`;\n      anchor.download = filename;\n      document.body.appendChild(anchor);\n      anchor.click();\n      document.body.removeChild(anchor);\n      setOperationMessage(\"Download initiated!\");\n      // Optionally reset downloadUrl if you want the button to disappear after one click\n      // setTimeout(() => setDownloadUrl(\"\"), 2000); \n    } else {\n      console.log(\"No download URL available to trigger download.\");\n      setError(\"Download URL is not available. Please try generating again.\");\n    }\n  };\n  const exampleTopics = [\"Effective Time Management Strategies\", \"Introduction to Quantum Computing\", \"The Future of Renewable Energy Sources\", \"Content Marketing for Small Businesses\", \"Mindfulness and Well-being in the Workplace\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-element bg-element-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-element bg-element-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon-container\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon\",\n              children: \"\\uD83C\\uDFA8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: \"AI PowerPoint Generator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"subtitle\",\n            children: \"Transform text into presentations instantly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"\\uD83D\\uDCDD Enter detailed text or a topic for your presentation:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-input\",\n              placeholder: \"e.g., A comprehensive analysis of the impact of artificial intelligence on the global economy, covering key sectors like healthcare, finance, and manufacturing, along with potential societal implications and future trends...\",\n              value: textInput,\n              onChange: e => setTextInput(e.target.value),\n              rows: 5,\n              disabled: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), textInput && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-check\",\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), !textInput && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestions\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"suggestions-label\",\n              children: \"\\uD83D\\uDCA1 Try these examples (you can expand on them in the text area):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"suggestions-list\",\n              children: exampleTopics.slice(0, 3).map((example, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setTextInput(example),\n                className: \"suggestion-btn\",\n                children: example\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"numSlides\",\n            className: \"form-label\",\n            children: \"\\u2699\\uFE0F Number of Content Slides (approx.):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"numSlides\",\n            className: \"form-input form-input-small\",\n            value: numSlides,\n            onChange: e => setNumSlides(Math.max(1, Math.min(15, parseInt(e.target.value) || 1))) // Clamp values\n            ,\n            min: \"1\",\n            max: \"15\",\n            disabled: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGenerate,\n          disabled: loading || !textInput.trim(),\n          className: `generate-btn ${loading || !textInput.trim() ? \"generate-btn-disabled\" : \"\"}`,\n          children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 44\n            }, this), \"Generating...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn-icon\",\n              children: \"\\u2728\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 44\n            }, this), \"Generate Presentation\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), (loading || progress > 0) &&\n        /*#__PURE__*/\n        // Show progress if loading OR if progress was made (e.g. success but before clearing)\n        _jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: operationMessage || (loading ? \"Processing...\" : \"Done!\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [Math.round(progress), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${progress}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), downloadUrl && !loading && !error &&\n        /*#__PURE__*/\n        // Show download button only on success\n        _jsxDEV(\"button\", {\n          onClick: triggerDownload,\n          className: \"download-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn-icon\",\n              children: \"\\uD83D\\uDCE5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 44\n            }, this), \"Download Your PPT\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), error && !loading &&\n        /*#__PURE__*/\n        // Show error only when not loading\n        _jsxDEV(\"div\", {\n          className: \"error-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-icon\",\n              children: \"\\u26A0\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-title\",\n                children: \"An Error Occurred\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-message\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"footer-text\",\n          children: \"Powered by Generative AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XC9pPjEr4VyaR4WLuJjcPp5DZto=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","App","_s","textInput","setTextInput","loading","setLoading","error","setError","downloadUrl","setDownloadUrl","progress","setProgress","numSlides","setNumSlides","operationMessage","setOperationMessage","simulateProgress","currentProgress","intervalId","setInterval","clearInterval","Math","random","handleGenerate","console","log","progressInterval","backendUrl","process","env","REACT_APP_BACKEND_URL","requestBody","text_input","num_slides","parseInt","JSON","stringify","response","fetch","method","headers","body","status","statusText","responseData","json","ok","errorMessage","detail","Array","isArray","msg","message","Error","download_url","err","triggerDownload","anchor","document","createElement","href","filename","substring","lastIndexOf","download","appendChild","click","removeChild","exampleTopics","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","rows","disabled","slice","map","example","idx","onClick","htmlFor","type","id","max","min","trim","round","style","width","_c","$RefreshReg$"],"sources":["C:/Users/swana/Swapnil/Text-To-PPT/TextToPPT/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [textInput, setTextInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [downloadUrl, setDownloadUrl] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n  const [numSlides, setNumSlides] = useState(5);\n  const [operationMessage, setOperationMessage] = useState(\"\");\n\n  // Effect to stop loading when operation completes (success or error)\n  useEffect(() => {\n    if (downloadUrl || error) {\n      setLoading(false);\n      if (downloadUrl && !error) {\n        setProgress(100); // Ensure progress is 100 on success\n        setOperationMessage(\"Presentation ready for download!\");\n      } else if (error) {\n        setProgress(0); // Reset progress on error\n        // Operation message will be the error itself\n      }\n    }\n  }, [downloadUrl, error]);\n\n  // Simulate progress for better UX\n  const simulateProgress = useCallback(() => {\n    setProgress(0);\n    setOperationMessage(\"Initializing...\");\n    let currentProgress = 0;\n    const intervalId = setInterval(() => {\n      // Stop simulating if no longer loading (e.g., error occurred early or user cancelled)\n      if (!loading && !downloadUrl) { // Check loading state from parent scope\n          clearInterval(intervalId);\n          if (!error) setProgress(0); // Reset if not an error state\n          if (!error) setOperationMessage(\"\");\n          return;\n      }\n      \n      currentProgress += Math.random() * 10 + 7; // Slightly faster and more consistent steps\n\n      if (downloadUrl) { // If downloadUrl is set, we are done with generation\n        setProgress(100);\n        setOperationMessage(\"Finalizing and preparing download...\");\n        clearInterval(intervalId);\n        return;\n      }\n      \n      if (currentProgress >= 95) {\n        setProgress(95);\n        setOperationMessage(\"Almost ready, wrapping up...\");\n        // Don't clear interval here, wait for downloadUrl or error to stop it\n      } else {\n        setProgress(currentProgress);\n        if (currentProgress < 30) setOperationMessage(\"Contacting AI service...\");\n        else if (currentProgress < 70) setOperationMessage(\"AI is crafting your content...\");\n        else setOperationMessage(\"Assembling presentation slides...\");\n      }\n    }, 450); // Interval duration\n    return intervalId;\n  }, [loading, downloadUrl, error]); // Dependencies for useCallback\n\n\n  const handleGenerate = async () => {\n    console.log(\"handleGenerate called\");\n    setLoading(true); // Set loading true immediately\n    setError(\"\");\n    setDownloadUrl(\"\");\n    setOperationMessage(\"Starting generation...\"); // Initial message\n    \n    const progressInterval = simulateProgress();\n\n    try {\n      const backendUrl = process.env.REACT_APP_BACKEND_URL || \"http://localhost:8000\";\n      const requestBody = {\n        text_input: textInput,\n        num_slides: parseInt(numSlides) || 5,\n      };\n      console.log(\"Sending request to backend:\", `${backendUrl}/generate-ppt/`, \"with body:\", JSON.stringify(requestBody));\n\n      const response = await fetch(`${backendUrl}/generate-ppt/`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(requestBody),\n      });\n      \n      console.log(\"Backend response status:\", response.status, response.statusText);\n      const responseData = await response.json(); // Attempt to parse JSON for both success and error\n      console.log(\"Backend response data:\", responseData);\n\n      if (!response.ok) {\n        // Try to get a more specific error message from FastAPI's detail structure\n        let errorMessage = `Request failed: ${response.statusText} (${response.status})`;\n        if (responseData && responseData.detail) {\n          if (Array.isArray(responseData.detail) && responseData.detail[0] && responseData.detail[0].msg) {\n            errorMessage = responseData.detail[0].msg;\n          } else if (typeof responseData.detail === 'string') {\n            errorMessage = responseData.detail;\n          }\n        } else if (responseData && responseData.message) {\n            errorMessage = responseData.message;\n        }\n        console.error(\"API Error from backend:\", errorMessage);\n        throw new Error(errorMessage);\n      }\n\n      if (responseData.download_url) {\n        setDownloadUrl(responseData.download_url); // This will trigger useEffect\n        // Progress and operation message will be updated by useEffect and simulateProgress final step\n        console.log(\"Download URL set from backend:\", responseData.download_url);\n      } else {\n        console.error(\"Backend response OK, but no download_url found in data:\", responseData);\n        throw new Error(\"Server did not provide a download link despite success status.\");\n      }\n      \n    } catch (err) {\n      console.error(\"Error in handleGenerate (fetch or processing):\", err);\n      setError(err.message || \"An unknown error occurred during generation.\");\n      // setLoading(false) and progress reset will be handled by useEffect due to setError\n    } finally {\n        // Interval must be cleared if it's still running\n        // (e.g., if an error occurred before downloadUrl was set)\n        clearInterval(progressInterval);\n        // setLoading(false) is handled by the useEffect hook based on downloadUrl or error states\n    }\n  };\n\n  const triggerDownload = () => {\n    if (downloadUrl) {\n      console.log(\"Attempting to trigger download for URL:\", downloadUrl);\n      setOperationMessage(\"Download starting...\");\n      const anchor = document.createElement('a');\n      anchor.href = downloadUrl;\n      const filename = downloadUrl.substring(downloadUrl.lastIndexOf('/') + 1) || `${textInput.substring(0,20) || \"presentation\"}.pptx`;\n      anchor.download = filename; \n      document.body.appendChild(anchor);\n      anchor.click();\n      document.body.removeChild(anchor);\n      setOperationMessage(\"Download initiated!\");\n      // Optionally reset downloadUrl if you want the button to disappear after one click\n      // setTimeout(() => setDownloadUrl(\"\"), 2000); \n    } else {\n      console.log(\"No download URL available to trigger download.\");\n      setError(\"Download URL is not available. Please try generating again.\");\n    }\n  };\n\n  const exampleTopics = [\n    \"Effective Time Management Strategies\", \"Introduction to Quantum Computing\", \"The Future of Renewable Energy Sources\",\n    \"Content Marketing for Small Businesses\", \"Mindfulness and Well-being in the Workplace\"\n  ];\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"app-wrapper\">\n        <div className=\"main-card\">\n          <div className=\"bg-element bg-element-1\"></div>\n          <div className=\"bg-element bg-element-2\"></div>\n          <div className=\"header\">\n            <div className=\"icon-container\"><span className=\"icon\">🎨</span></div>\n            <h1 className=\"title\">AI PowerPoint Generator</h1>\n            <p className=\"subtitle\">Transform text into presentations instantly</p>\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"form-label\">📝 Enter detailed text or a topic for your presentation:</label>\n            <div className=\"input-container\">\n              <textarea\n                className=\"form-input\"\n                placeholder=\"e.g., A comprehensive analysis of the impact of artificial intelligence on the global economy, covering key sectors like healthcare, finance, and manufacturing, along with potential societal implications and future trends...\"\n                value={textInput}\n                onChange={(e) => setTextInput(e.target.value)}\n                rows={5}\n                disabled={loading}\n              />\n              {textInput && !loading && (<div className=\"input-check\">✓</div>)}\n            </div>\n            {!textInput && !loading && (\n              <div className=\"suggestions\">\n                <p className=\"suggestions-label\">💡 Try these examples (you can expand on them in the text area):</p>\n                <div className=\"suggestions-list\">\n                  {exampleTopics.slice(0, 3).map((example, idx) => (\n                    <button key={idx} onClick={() => setTextInput(example)} className=\"suggestion-btn\">{example}</button>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"numSlides\" className=\"form-label\">⚙️ Number of Content Slides (approx.):</label>\n            <input\n              type=\"number\"\n              id=\"numSlides\"\n              className=\"form-input form-input-small\"\n              value={numSlides}\n              onChange={(e) => setNumSlides(Math.max(1, Math.min(15, parseInt(e.target.value) || 1)))} // Clamp values\n              min=\"1\"\n              max=\"15\"\n              disabled={loading}\n            />\n          </div>\n\n          <button\n            onClick={handleGenerate}\n            disabled={loading || !textInput.trim()}\n            className={`generate-btn ${loading || !textInput.trim() ? \"generate-btn-disabled\" : \"\"}`}\n          >\n            {loading ? (\n              <div className=\"btn-content\"><div className=\"spinner\"></div>Generating...</div>\n            ) : (\n              <div className=\"btn-content\"><span className=\"btn-icon\">✨</span>Generate Presentation</div>\n            )}\n          </button>\n\n          {(loading || progress > 0) && ( // Show progress if loading OR if progress was made (e.g. success but before clearing)\n            <div className=\"progress-container\">\n              <div className=\"progress-text\">\n                <span>{operationMessage || (loading ? \"Processing...\" : \"Done!\")}</span>\n                <span>{Math.round(progress)}%</span>\n              </div>\n              <div className=\"progress-bar\"><div className=\"progress-fill\" style={{ width: `${progress}%` }}></div></div>\n            </div>\n          )}\n\n          {downloadUrl && !loading && !error && ( // Show download button only on success\n            <button onClick={triggerDownload} className=\"download-btn\">\n              <div className=\"btn-content\"><span className=\"btn-icon\">📥</span>Download Your PPT</div>\n            </button>\n          )}\n\n          {error && !loading && ( // Show error only when not loading\n            <div className=\"error-container\">\n              <div className=\"error-content\">\n                <span className=\"error-icon\">⚠️</span>\n                <div className=\"error-text\">\n                  <p className=\"error-title\">An Error Occurred</p>\n                  <p className=\"error-message\">{error}</p>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"footer\"><p className=\"footer-text\">Powered by Generative AI</p></div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}